version: "3.8"

services:
  yandex-direct-ecom-api:
    build: .
    container_name: yandex-direct-ecom-api 
    restart: always
    environment:
      TZ: Europe/Moscow
      YA_TEST_TOKENS: ${YA_TEST_TOKENS}
      YA_TEST_USERS: ${YA_TEST_USERS}
      YA_CLIENT_ID: ${YA_CLIENT_ID}
      ECOMRU_PG_DB_NAME: ${ECOMRU_PG_DB_NAME}
      ECOMRU_PG_HOST: ${ECOMRU_PG_HOST}
      ECOMRU_PG_PORT: ${ECOMRU_PG_PORT}
      ECOMRU_PG_USER: ${ECOMRU_PG_USER}
      ECOMRU_PG_PASSWORD: ${ECOMRU_PG_PASSWORD}
      ECOMRU_PG_SSL_MODE: ${ECOMRU_PG_SSL_MODE}
    depends_on:
      - redis
    #command: sh script.sh
    volumes:
      - /home/get/logs_all/yandex_direct_ecom_api/:/app/logs/
    
  nginx:
    container_name: nginx-yandex-direct-ecom-api
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - yandex-direct-ecom-api
    restart: always
    environment:
      - "TZ=Europe/Moscow"
    ports:
      - 8089:80
      - 4440:443
    volumes:
      - /home/get/cert:/app/cert

  redis:
    container_name: redis
    restart: always
#    image: redis:latest
    image: redis:7.2-rc1-alpine
    ports:
      - 6379:6379
    command: redis-server --appendonly yes --replica-read-only no

  worker:
    container_name: celery
    build: .
    command: celery -A api.celery worker --loglevel=info
    volumes:
      - /home/get/logs_all/yandex_direct_ecom_api/:/app/logs/
    depends_on:
      - redis
      - yandex-direct-ecom-api


